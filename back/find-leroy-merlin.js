const https = require('https');

const API_KEY = '37843c7b4f2d2571cb4db43512a5340041856528';

async function searchPlace(query) {
  return new Promise((resolve, reject) => {
    const data = JSON.stringify({
      q: query,
      hl: 'uk',
      gl: 'ua',
      num: 10
    });

    const options = {
      hostname: 'google.serper.dev',
      port: 443,
      path: '/maps/search',
      method: 'POST',
      headers: {
        'X-API-KEY': API_KEY,
        'Content-Type': 'application/json',
        'Content-Length': data.length
      }
    };

    const req = https.request(options, (res) => {
      let responseData = '';
      res.on('data', (chunk) => {
        responseData += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(responseData);
          resolve(result);
        } catch (error) {
          reject(error);
        }
      });
    });

    req.on('error', (error) => {
      reject(error);
    });

    req.write(data);
    req.end();
  });
}

async function findLeroyMerlin() {
  try {
    console.log('üîç –®—É–∫–∞—î–º–æ "–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω" –≤ –ö–∏—î–≤—ñ...');
    
    const queries = [
      '–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω –ö–∏—ó–≤',
      'Leroy Merlin Kyiv',
      '–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω –ö–∏–µ–≤',
      'Leroy Merlin Ukraine'
    ];

    for (const query of queries) {
      console.log(`\nüìù –ü–æ—à—É–∫: "${query}"`);
      
      try {
        const result = await searchPlace(query);
        
        if (result.places && result.places.length > 0) {
          console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${result.places.length} –º—ñ—Å—Ü—å:`);
          
          result.places.forEach((place, index) => {
            console.log(`\n${index + 1}. ${place.title}`);
            console.log(`   üìç –ê–¥—Ä–µ—Å–∞: ${place.address}`);
            console.log(`   üÜî Place ID: ${place.placeId || '–ù–µ–º–∞—î'}`);
            console.log(`   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${place.rating || '–ù–µ–º–∞—î'}`);
            console.log(`   üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${place.phoneNumber || '–ù–µ–º–∞—î'}`);
            console.log(`   üåê URL: ${place.googleMapsUrl || '–ù–µ–º–∞—î'}`);
            
            if (place.placeId && place.placeId.startsWith('ChIJ')) {
              console.log(`   ‚úÖ –í–ê–õ–Ü–î–ù–ò–ô Place ID: ${place.placeId}`);
            }
          });
          
          // –Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –≤–∞–ª—ñ–¥–Ω–∏–π Place ID, –∑—É–ø–∏–Ω—è—î–º–æ –ø–æ—à—É–∫
          const validPlace = result.places.find(p => p.placeId && p.placeId.startsWith('ChIJ'));
          if (validPlace) {
            console.log(`\nüéâ –ó–Ω–∞–π–¥–µ–Ω–æ –≤–∞–ª—ñ–¥–Ω–∏–π Place ID: ${validPlace.placeId}`);
            console.log(`üìç –ú—ñ—Å—Ü–µ: ${validPlace.title}`);
            console.log(`üîó URL –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: https://maps.google.com/maps/place/${validPlace.placeId}`);
            break;
          }
        } else {
          console.log('‚ùå –ú—ñ—Å—Ü—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
      } catch (error) {
        console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É "${query}": ${error.message}`);
      }
      
      // –ü–∞—É–∑–∞ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
  } catch (error) {
    console.error('‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—à—É–∫
findLeroyMerlin();
