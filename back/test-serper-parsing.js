const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ñ URL –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª
const testUrls = [
  // Google Maps
  'https://maps.google.com/maps/place/–†–µ—Å—Ç–æ—Ä–∞–Ω+–£–∫—Ä–∞—ó–Ω–∞/@50.4501,30.5234,17z',
  
  // Google Play Store
  'https://play.google.com/store/apps/details?id=com.whatsapp',
  
  // App Store
  'https://apps.apple.com/app/whatsapp-messenger/id310633997',
  
  // Google Search
  'https://www.google.com/search?q=whatsapp+reviews'
];

async function testConnection() {
  console.log('üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ serper.dev...');
  
  try {
    const response = await axios.get(`${BASE_URL}/url-parsing/test-connection`);
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', response.data);
    return response.data.success;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', error.message);
    return false;
  }
}

async function testUrlParsing(url) {
  console.log(`\nüöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Å–∏–Ω–≥—É URL: ${url}`);
  
  try {
    const response = await axios.post(`${BASE_URL}/url-parsing/parse`, {
      url: url,
      language: 'uk',
      sortBy: 'newest'
    });
    
    console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥—É:');
    console.log(`   –¢–∏–ø: ${response.data.type}`);
    console.log(`   –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä: ${response.data.identifier}`);
    console.log(`   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${response.data.count}`);
    console.log(`   –£—Å–ø—ñ—Ö: ${response.data.success}`);
    console.log(`   –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${response.data.message}`);
    
    if (response.data.comments && response.data.comments.length > 0) {
      console.log('   –ü–µ—Ä—à–∏–π –∫–æ–º–µ–Ω—Ç–∞—Ä:');
      const firstComment = response.data.comments[0];
      console.log(`     –ê–≤—Ç–æ—Ä: ${firstComment.author}`);
      console.log(`     –†–µ–π—Ç–∏–Ω–≥: ${firstComment.rating}`);
      console.log(`     –ö–æ–Ω—Ç–µ–Ω—Ç: ${firstComment.content.substring(0, 100)}...`);
    }
    
    return response.data;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É:', error.response?.data || error.message);
    return null;
  }
}

async function testDirectParsing() {
  console.log('\nüîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä—è–º–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É...');
  
  try {
    // –¢–µ—Å—Ç Google Maps
    console.log('\nüìç –¢–µ—Å—Ç Google Maps:');
    const mapsResponse = await axios.get(`${BASE_URL}/serper-parsing/google-maps?placeId=ChIJN1t_tDeuEmsRUsoyG83frY4&language=uk`);
    console.log(`   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${mapsResponse.data.count}`);
    
    // –¢–µ—Å—Ç Google Play
    console.log('\nüì± –¢–µ—Å—Ç Google Play Store:');
    const playResponse = await axios.get(`${BASE_URL}/serper-parsing/google-play?appId=com.whatsapp&language=uk`);
    console.log(`   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${playResponse.data.count}`);
    
    // –¢–µ—Å—Ç App Store
    console.log('\nüçé –¢–µ—Å—Ç App Store:');
    const appStoreResponse = await axios.get(`${BASE_URL}/serper-parsing/app-store?appId=310633997&language=uk`);
    console.log(`   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${appStoreResponse.data.count}`);
    
    // –¢–µ—Å—Ç Google Search
    console.log('\nüîç –¢–µ—Å—Ç Google Search:');
    const searchResponse = await axios.get(`${BASE_URL}/serper-parsing/google-search?query=whatsapp+reviews&language=uk`);
    console.log(`   –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${searchResponse.data.count}`);
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É:', error.response?.data || error.message);
  }
}

async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Å–∏–Ω–≥—É —á–µ—Ä–µ–∑ serper.dev\n');
  
  // –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  const isConnected = await testConnection();
  if (!isConnected) {
    console.log('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ serper.dev. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ API –∫–ª—é—á.');
    return;
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ URL
  console.log('\nüìä –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–∞—Ä—Å–∏–Ω–≥—É –ø–æ URL...');
  for (const url of testUrls) {
    await testUrlParsing(url);
    // –ü–∞—É–∑–∞ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ –ø—Ä—è–º–∏–π –ø–∞—Ä—Å–∏–Ω–≥
  await testDirectParsing();
  
  console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏
main().catch(console.error);
