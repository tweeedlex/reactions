const axios = require('axios');

const API_KEY = '37843c7b4f2d2571cb4db43512a5340041856528';
const BASE_URL = 'https://google.serper.dev/reviews';

async function testSerperRaw() {
  console.log('üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Ä–∏—Ö –¥–∞–Ω–∏—Ö –≤—ñ–¥ serper.dev...');
  
  try {
    const response = await axios.post(BASE_URL, {
      placeId: 'ChIJN1t_tDeuEmsRUsoyG83frY4',
      hl: 'uk',
      sortBy: 'newest'
    }, {
      headers: {
        'X-API-KEY': API_KEY,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å –æ—Ç—Ä–∏–º–∞–Ω–∞:');
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞:', Object.keys(response.data));
    
    if (response.data.reviews) {
      console.log('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–≥—É–∫—ñ–≤:', response.data.reviews.length);
      
      if (response.data.reviews.length > 0) {
        console.log('\nüìä –ü–µ—Ä—à–∏–π –≤—ñ–¥–≥—É–∫:');
        const firstReview = response.data.reviews[0];
        console.log('–ê–≤—Ç–æ—Ä:', firstReview.author);
        console.log('–ö–æ–Ω—Ç–µ–Ω—Ç:', firstReview.content);
        console.log('–†–µ–π—Ç–∏–Ω–≥:', firstReview.rating);
        console.log('–î–∞—Ç–∞:', firstReview.date);
        console.log('–ü–æ–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:', JSON.stringify(firstReview, null, 2));
      }
    } else {
      console.log('‚ùå –í—ñ–¥–≥—É–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      console.log('–ü–æ–≤–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:', JSON.stringify(response.data, null, 2));
    }
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    if (error.response) {
      console.error('–°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('–î–∞–Ω—ñ:', error.response.data);
    }
  }
}

testSerperRaw();
