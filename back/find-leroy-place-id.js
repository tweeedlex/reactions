const https = require('https');

const API_KEY = '37843c7b4f2d2571cb4db43512a5340041856528';

async function searchGoogle(query) {
  return new Promise((resolve, reject) => {
    const data = JSON.stringify({
      q: query,
      hl: 'uk',
      gl: 'ua',
      num: 10
    });

    const options = {
      hostname: 'google.serper.dev',
      port: 443,
      path: '/search',
      method: 'POST',
      headers: {
        'X-API-KEY': API_KEY,
        'Content-Type': 'application/json',
        'Content-Length': data.length
      }
    };

    const req = https.request(options, (res) => {
      let responseData = '';
      res.on('data', (chunk) => {
        responseData += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(responseData);
          resolve(result);
        } catch (error) {
          reject(error);
        }
      });
    });

    req.on('error', (error) => {
      reject(error);
    });

    req.write(data);
    req.end();
  });
}

async function findLeroyMerlinPlaceId() {
  try {
    console.log('üîç –®—É–∫–∞—î–º–æ Place ID –¥–ª—è "–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω" –≤ –ö–∏—î–≤—ñ...');
    
    const queries = [
      '–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω –ö–∏—ó–≤ maps.google.com',
      'Leroy Merlin Kyiv maps.google.com',
      '–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω –ö–∏–µ–≤ maps.google.com'
    ];

    for (const query of queries) {
      console.log(`\nüìù –ü–æ—à—É–∫: "${query}"`);
      
      try {
        const result = await searchGoogle(query);
        
        if (result.organic && result.organic.length > 0) {
          console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${result.organic.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
          
          for (const item of result.organic) {
            console.log(`\nüìç ${item.title}`);
            console.log(`üîó URL: ${item.link}`);
            
            // –®—É–∫–∞—î–º–æ Place ID –≤ URL
            const placeIdMatch = item.link.match(/ChIJ[^&?\/]+/);
            if (placeIdMatch) {
              const placeId = placeIdMatch[0];
              console.log(`‚úÖ –ó–ù–ê–ô–î–ï–ù–û Place ID: ${placeId}`);
              console.log(`üß™ –¢–µ—Å—Ç—É—î–º–æ –ø–∞—Ä—Å–∏–Ω–≥...`);
              
              // –¢–µ—Å—Ç—É—î–º–æ –ø–∞—Ä—Å–∏–Ω–≥
              const testUrl = `https://maps.google.com/maps/place/${placeId}`;
              console.log(`üîó –¢–µ—Å—Ç–æ–≤–∏–π URL: ${testUrl}`);
              
              return placeId;
            }
          }
        } else {
          console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
      } catch (error) {
        console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É "${query}": ${error.message}`);
      }
      
      // –ü–∞—É–∑–∞ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
    
    console.log('\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ Place ID –¥–ª—è "–õ–µ—Ä—É–∞ –ú–µ—Ä–ª–µ–Ω"');
    
  } catch (error) {
    console.error('‚ùå –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—à—É–∫
findLeroyMerlinPlaceId();
