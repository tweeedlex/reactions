const axios = require('axios');

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π —Ç–µ—Å—Ç —Å–µ—Ä–≤—ñ—Å—ñ–≤ –ø–∞—Ä—Å–∏–Ω–≥—É
async function demoTest() {
  const baseUrl = 'http://localhost:3000';
  
  console.log('üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å–µ—Ä–≤—ñ—Å—ñ–≤ –ø–∞—Ä—Å–∏–Ω–≥—É –≤—ñ–¥–≥—É–∫—ñ–≤\n');

  try {
    // 1. –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...');
    const connectionTest = await axios.get(`${baseUrl}/serper/test-connection`);
    console.log('‚úÖ serper.dev:', connectionTest.data.message);
    console.log('');

    // 2. –ü–æ–∫–∞–∑—É—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞
    console.log('2Ô∏è‚É£ –î–æ—Å—Ç—É–ø–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ –ø–∞—Ä—Å–∏–Ω–≥—É:');
    const sourcesResponse = await axios.get(`${baseUrl}/universal-parsing/sources`);
    sourcesResponse.data.forEach(source => {
      console.log(`  - ${source.name}: ${source.description}`);
    });
    console.log('');

    // 3. –¢–µ—Å—Ç—É—î–º–æ Google Maps
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Google Maps...');
    try {
      const mapsResponse = await axios.post(`${baseUrl}/universal-parsing/google-maps`, null, {
        params: {
          placeId: 'ChIJN1t_tDeuEmsRUsoyG83frY4',
          useSerper: true,
          language: 'uk'
        }
      });
      console.log(`‚úÖ Google Maps: ${mapsResponse.data.count} –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤`);
    } catch (error) {
      console.log(`‚ö†Ô∏è Google Maps: ${error.response?.data?.message || '–ü–æ—Ç—Ä–µ–±—É—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ Place ID'}`);
    }
    console.log('');

    // 4. –¢–µ—Å—Ç—É—î–º–æ Google Play Store
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Google Play Store...');
    try {
      const playResponse = await axios.post(`${baseUrl}/universal-parsing/google-play`, null, {
        params: {
          appId: 'com.ereader.readera',
          language: 'uk'
        }
      });
      console.log(`‚úÖ Google Play Store: ${playResponse.data.count} –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤`);
    } catch (error) {
      console.log(`‚ö†Ô∏è Google Play Store: ${error.response?.data?.message || '–ü–æ—Ç—Ä–µ–±—É—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ App ID'}`);
    }
    console.log('');

    // 5. –¢–µ—Å—Ç—É—î–º–æ Google Search
    console.log('5Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Google Search...');
    try {
      const searchResponse = await axios.post(`${baseUrl}/universal-parsing/google-search`, null, {
        params: {
          query: 'ReadEra reviews',
          language: 'uk'
        }
      });
      console.log(`‚úÖ Google Search: ${searchResponse.data.count} –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤`);
    } catch (error) {
      console.log(`‚ö†Ô∏è Google Search: ${error.response?.data?.message || '–ü–æ—Ç—Ä–µ–±—É—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É'}`);
    }

    console.log('\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('\nüí° –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ:');
    console.log('   - Google Maps: —Å–ø—Ä–∞–≤–∂–Ω—ñ–π Place ID –∑ Google Maps');
    console.log('   - Google Play Store: —Å–ø—Ä–∞–≤–∂–Ω—ñ–π App ID –∑ Play Store');
    console.log('   - App Store: —Å–ø—Ä–∞–≤–∂–Ω—ñ–π App ID –∑ App Store');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.response?.data || error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä: npm run start:dev');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é
demoTest();
