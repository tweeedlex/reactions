const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

async function testInstagramIntegration() {
  try {
    console.log('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Instagram —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó...\n');

    // –¢–µ—Å—Ç 1: –ü–∞—Ä—Å–∏–Ω–≥ Instagram –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
    console.log('üì§ –¢–µ—Å—Ç 1: –ü–∞—Ä—Å–∏–Ω–≥ Instagram –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤');
    const parseData = {
      urls: [
        'https://www.instagram.com/p/DI_rMo2CCTz'
      ],
      maxComments: 20,
      useApifyProxy: true
    };

    console.log('–í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥...');
    const parseResponse = await axios.post(`${BASE_URL}/instagram-parsing/parse`, parseData);
    console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log(`üìä –ó–±–µ—Ä–µ–∂–µ–Ω–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${parseResponse.data.length}`);
    
    if (parseResponse.data.length > 0) {
      console.log('\nüìù –ü—Ä–∏–∫–ª–∞–¥ –∫–æ–º–µ–Ω—Ç–∞—Ä—è:');
      const sampleComment = parseResponse.data[0];
      console.log(`- –ê–≤—Ç–æ—Ä: ${sampleComment.authorFullName || sampleComment.authorUsername}`);
      console.log(`- –¢–µ–∫—Å—Ç: ${sampleComment.text.substring(0, 100)}...`);
      console.log(`- –õ–∞–π–∫–∏: ${sampleComment.likesCount}`);
      console.log(`- –ß–∞—Å: ${sampleComment.timestamp}`);
    }

    // –¢–µ—Å—Ç 2: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤
    console.log('\nüì• –¢–µ—Å—Ç 2: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤');
    const allComments = await axios.get(`${BASE_URL}/instagram-parsing/comments`);
    console.log(`üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤: ${allComments.data.length}`);

    // –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –∑–∞ URL
    console.log('\nüîç –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –∑–∞ URL');
    const urlComments = await axios.get(`${BASE_URL}/instagram-parsing/comments/by-url?url=${encodeURIComponent(parseData.urls[0])}`);
    console.log(`üìä –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –¥–ª—è –ø–æ—Å—Ç–∞: ${urlComments.data.length}`);

    // –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö
    console.log('\nüîç –¢–µ—Å—Ç 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∞–Ω–∏—Ö');
    if (allComments.data.length > 0) {
      const comment = allComments.data[0];
      const requiredFields = ['id', 'postUrl', 'commentId', 'text', 'authorUsername', 'likesCount', 'timestamp'];
      const missingFields = requiredFields.filter(field => !(field in comment));
      
      if (missingFields.length === 0) {
        console.log('‚úÖ –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç–Ω—ñ');
      } else {
        console.log(`‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ –ø–æ–ª—è: ${missingFields.join(', ')}`);
      }
    }

    console.log('\n‚úÖ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!');
    console.log('\nüåê –¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥:');
    console.log('   - –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞: http://localhost:5173/');
    console.log('   - Instagram –ø–∞—Ä—Å–∏–Ω–≥: http://localhost:5173/instagram');

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ:', error.response?.data || error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –±–µ–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ:');
      console.log('   cd back && npm run start:dev');
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
testInstagramIntegration();
