import { Navigate } from 'react-router-dom';
import { useAuth } from '@/contexts/AuthContext';

interface AdminRouteProps {
  children: React.ReactNode;
}

export function AdminRoute({ children }: AdminRouteProps) {
  const authContext = useAuth();
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ AuthContext –¥–æ—Å—Ç—É–ø–Ω–∏–π
  if (!authContext) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-4 border-purple-400 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-gray-300">–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...</p>
        </div>
      </div>
    );
  }
  
  const { user, loading, initialized, hasCompany, userRole } = authContext;

  console.log('üîí AdminRoute: State check', { 
    loading, 
    initialized, 
    hasUser: !!user, 
    hasCompany,
    userRole
  });

  // –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–∫–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
  if (loading || !initialized) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-4 border-purple-400 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-gray-300">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
        </div>
      </div>
    );
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  if (!user) {
    console.log('üîí AdminRoute: No user, redirecting to /auth');
    return <Navigate to="/auth" replace />;
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π, –∞–ª–µ –Ω–µ –º–∞—î –∫–æ–º–ø–∞–Ω—ñ—ó, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
  if (!hasCompany) {
    console.log('üîí AdminRoute: No company, redirecting to /setup');
    return <Navigate to="/setup" replace />;
  }

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É —Å–∞–ø–æ—Ä—Ç—É
  if (userRole !== 'admin') {
    console.log('üîí AdminRoute: Not admin, redirecting to /support');
    return <Navigate to="/support" replace />;
  }

  console.log('üîí AdminRoute: All checks passed, rendering children');

  return <>{children}</>;
}
