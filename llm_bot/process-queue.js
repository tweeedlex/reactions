const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.SUPABASE_URL || 'http://127.0.0.1:54321';
const supabaseKey = process.env.SUPABASE_ANON_KEY;

if (!supabaseKey) {
  console.error('‚ùå SUPABASE_ANON_KEY is not set!');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function processQueue() {
  console.log('üîÑ Processing analysis queue...');
  
  try {
    // –í—ã–∑—ã–≤–∞–µ–º Edge Function –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏
    const { data, error } = await supabase.functions.invoke('process-queue', {
      body: {}
    });

    if (error) {
      console.error('‚ùå Error processing queue:', error);
      return;
    }

    console.log('‚úÖ Queue processing result:', JSON.stringify(data, null, 2));
    
  } catch (error) {
    console.error('‚ùå Queue processing failed:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
console.log('üöÄ Starting queue processor...');
console.log('üìã Processing queue every 30 seconds...');
console.log('‚èπÔ∏è  Press Ctrl+C to stop');

processQueue(); // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫

setInterval(processQueue, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
